//
// StripeiOSResources-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 6/27/16
// https://github.com/dempseyatgithub/BuildSettingExtractor
//


// Always Search User Paths
// 
// If enabled both #include <header.h>-style and #include "header.h"-style directives
// will search the paths in "User Header Search Paths" before "Header Search Paths", with
// the consequence that user headers (such as your own String.h header) would have
// precedence over system headers when using #include <header.h>. This is done using the
// -iquote flag for the paths provided in "User Header Search Paths". If disabled and
// your compiler fully supports separate user paths, user headers will only be accessible
// with #include "header.h"-style preprocessor directives.
// 
// For backwards compatibility reasons, this setting is enabled by default, but disabling
// it is strongly recommended.

ALWAYS_SEARCH_USER_PATHS = NO



CLANG_ANALYZER_NONNULL = YES



CLANG_CXX_LANGUAGE_STANDARD = gnu++0x



CLANG_CXX_LIBRARY = libc++



CLANG_ENABLE_MODULES = YES



CLANG_ENABLE_OBJC_ARC = YES



CLANG_WARN__DUPLICATE_METHOD_MATCH = YES



CLANG_WARN_BOOL_CONVERSION = YES



CLANG_WARN_CONSTANT_CONVERSION = YES



CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR



CLANG_WARN_EMPTY_BODY = YES



CLANG_WARN_ENUM_CONVERSION = YES



CLANG_WARN_INT_CONVERSION = YES



CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR



CLANG_WARN_UNREACHABLE_CODE = YES



// Code Signing Identity
// 
// The name ("common name") of a valid code-signing certificate in a keychain within your
// keychain path.   A missing or invalid certificate will cause a build error.

CODE_SIGN_IDENTITY = -



// Combine High Resolution Artwork
// 
// Combines image files at different resolutions into one multi-page TIFF file that is
// HiDPI compliant for Mac OS X 10.7 and later. Only image files in the same directory
// and with the same base name and extension are combined. The file names must conform to
// the naming convention used in HiDPI.

COMBINE_HIDPI_IMAGES = NO



// Strip Debug Symbols During Copy
// 
// Activating this setting causes binary files which are copied during the build (e.g.,
// in a Copy Bundle Resources or Copy Files build phase) to be stripped of debugging
// symbols.  It does not cause the linked product of a target to be stripped (use Strip
// Linked Product for that).

COPY_PHASE_STRIP = NO



ENABLE_STRICT_OBJC_MSGSEND = YES



GCC_C_LANGUAGE_STANDARD = gnu99



GCC_NO_COMMON_BLOCKS = YES



GCC_WARN_64_TO_32_BIT_CONVERSION = YES



GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR



GCC_WARN_UNDECLARED_SELECTOR = YES



GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE



GCC_WARN_UNUSED_FUNCTION = YES



GCC_WARN_UNUSED_VARIABLE = YES



// Info.plist File
// 
// This is the project-relative path to the plist file that contains the Info.plist
// information used by bundles.

INFOPLIST_FILE = StripeiOSResources/Info.plist



// Installation Directory
// 
// The directory to install the build products in. This path is prepended by the
// 'Installation Build Products Location' (i.e., $(DSTROOT)).

INSTALL_PATH = $(LOCAL_LIBRARY_DIR)/Bundles



PRODUCT_BUNDLE_IDENTIFIER = com.stripe.StripeiOSResources



// Product Name
// 
// This is the basename of the product generated.

PRODUCT_NAME = Stripe



// Skip Install
// 
// Activating this setting when deployment locations are used causes the product to be
// built into an alternative location instead of the install location.

SKIP_INSTALL = YES

// Wrapper Extension
// 
// This is the extension used for product wrappers, which has a default value based on
// the product type.

WRAPPER_EXTENSION = bundle

// Debug Information Format
// 
// This setting controls the format of debug information used by the developer tools.
// 
// DWARF - Object files and linked products will use DWARF as the debug information
// format. [dwarf]
// DWARF with dSYM File - Object files and linked products will use DWARF as the debug
// information format, and Xcode will also produce a dSYM file containing the debug
// information from the individual object files (except that a dSYM file is not needed
// and will not be created for static library or object file products). [dwarf-with-dsym]

DEBUG_INFORMATION_FORMAT = dwarf-with-dsym

ENABLE_NS_ASSERTIONS = NO

// Produce debugging information
// 
// Produce debugging information. This information is required for shader profiling.

MTL_ENABLE_DEBUG_INFO = NO
